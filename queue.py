from task import *
from collections import deque

class Queue:
    maxThreads = 10;
    queue = deque([]);
    busy=[];
    done = [[]];
    
    def __init__(self, threads):
        self.maxThreads = threads;
        print "Queue created with ",threads," threads";

    #create a task in this queue
    def createTask(self, scriptname):
        self.queue.append(Task(scriptname));

    #delete a task from this queue
    def deleteTask(self,scriptname):
        for x in list(self.queue):
            if x.name == scriptname:
                print "deleted " + x.getName();
                self.queue.remove(x);
                return;

    #start the queue 
    def start(self):
        currentThreads = 0;
        #while there is something in the queue or something is busy
        while self.queue or self.busy:
            #if there is a thread free and something in the queue
            if currentThreads < self.maxThreads and self.queue:
                x = self.queue.pop();
                print "starting " + x.getName();
                x.startScript();
                self.busy.append(x);
                currentThreads+=1;
            #If nothing is busy
            for x in self.busy:
                if not x.getStatus():
                    currentThreads-=1;
                    self.busy.remove(x);
                    self.done.append([x.getName() , x.getResult()]);
                    print x.getName()+ " is done";
            
    #get the queue
    def getQueue(self):
        results = [];
        for x in self.queue:
            results.append(x.getName());
        return results;

    #get the results
    def getResults(self):
        del self.done[0];
        return self.done;
