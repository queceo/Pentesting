#import tkinter as tk   # python3
import Tkinter as tk   # python
import scanner

TITLE_FONT = ("Helvetica", 18, "bold")

class GUI(tk.Tk):
    def __init__(self, *args, **kwargs):
        tk.Tk.__init__(self, *args, **kwargs)

        # the container is where we'll stack a bunch of frames
        # on top of each other, then the one we want visible
        # will be raised above the others
        container = tk.Frame(self)
        container.pack(side="top", fill="both", expand=True)
        container.grid_rowconfigure(0, weight=1)
        container.grid_columnconfigure(0, weight=1)

        #Scanner init
        self.SC = scanner.scanner()

        self.frames = {}
        for F in (StartPage, Scanner, PageTwo):
            page_name = F.__name__
            frame = F(container, self)
            self.frames[page_name] = frame

            # put all of the pages in the same location;
            # the one on the top of the stacking order
            # will be the one that is visible.
            frame.grid(row=0, column=0, sticky="nsew")

        self.show_frame("StartPage")

    def show_frame(self, page_name):
        '''Show a frame for the given page name'''
        frame = self.frames[page_name]
        frame.tkraise()

    def update_frame(self, page_name):
        '''Show a frame for the given page name'''
        frame = self.frames[page_name]
        frame.update()

class StartPage(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller
        label = tk.Label(self, text="PenTesting Tool", font=TITLE_FONT)
        label.pack(side="top", fill="x", pady=10)

        button1 = tk.Button(self, text="Start Scan",
                            command=lambda: controller.show_frame("Scanner"))
        button2 = tk.Button(self, text="Logging",
                            command=lambda: controller.show_frame("PageTwo"))
        button3 = tk.Button(self, text="Custom Script",
                            command=lambda: controller.show_frame("PageTwo"))
        button4 = tk.Button(self, text="CronJobs",
                            command=lambda: controller.show_frame("PageTwo"))
        button5 = tk.Button(self, text="Help",
                            command=lambda: controller.show_frame("PageTwo"))
        button1.pack()
        button2.pack()
        button3.pack()
        button4.pack()
        button5.pack()


class Scanner(tk.Frame):
    def addIPaction(self):
        self.controller.SC.add_scan_ip(self.ipaddress.get(),self.portnumber.get()) 
        self.controller.update_frame("Scanner")

        toList = "%d %s %s %s" % (1,self.ipaddress.get(),self.portnumber.get(),"vandaag")
        self.rowcount += 1
        tk.Label(self,text=toList).grid(row=self.rowcount,column=0,columnspan=2)


    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller
        
        self.rowcount = 7

        self.ipaddress = tk.StringVar()
        self.portnumber = tk.StringVar()

        label = tk.Label(self, text="Scanner Settings", font=TITLE_FONT).grid(row=0,column=0,columnspan=2)
        
        l0 = tk.Label(self, text="PENTESTING").grid(row=1,column=0,columnspan=2)

        l1 = tk.Label(self, text="Ip Address").grid(row=2,column=0)

        e1 = tk.Entry(self,textvariable = self.ipaddress).grid(row=2,column=1) # Entry IPfield

        l2 = tk.Label(self, text="Port Number").grid(row=3,column=0)

        e2 = tk.Entry(self ,textvariable = self.portnumber).grid(row=3,column=1) # Entry Portfield

        InsertIP = tk.Button(self, text ="Add IP-address", command=self.addIPaction).grid(row=4,column=0,columnspan=2) #submit IPfield
        
        button = tk.Button(self, text="Go Back", command=lambda: controller.show_frame("StartPage")).grid(row=5,column=0,columnspan=2)

        tk.Label(self, text="IP Scan List").grid(row=6,column=0,columnspan=2)
        scanIpList = controller.SC.get_scan_ip()
        for row in scanIpList:
            self.rowcount += 1
            tk.Label(self,text=row).grid(row=self.rowcount,column=0,columnspan=2)



class PageTwo(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller
        label = tk.Label(self, text="This is page 2", font=TITLE_FONT)
        label.pack(side="top", fill="x", pady=10)
        button = tk.Button(self, text="Go to the start page",
                           command=lambda: controller.show_frame("StartPage"))
        button.pack()

