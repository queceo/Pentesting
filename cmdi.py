#!/usr/bin/env python

import cmd
import scanner

class CMD(cmd.Cmd):
	"""Simple command processor example."""
	
	def __init__(self):
		cmd.Cmd.__init__(self)
		self.prompt = "> "
		self.intro  = "Welcome to console!"  ## defaults to None

		#scanner Object
		self.SC = scanner.scanner()

	#scanner actions
	def do_scanner(self, arguments):
		args = arguments.split()
		if len(args) >= 1:

			# add ip with port to database scanlist
			# usage: scanner add [ip] [port]
			if args[0] == "add":
				try: 
					ipaddress = args[1]
					port      = args[2]
					self.SC.add_scan_ip(ipaddress,port) 
				except:
					print "Usage: scanner add [ip] [port]"
			
			# delete ip with port from database scanlist
			# usage: scanner delete [id]
			elif args[0] == "delete":
				try: 
					iid = args[1]
					self.SC.delete_scan_ip(iid) 
				except:
					print "Usage: scanner delete [id]"

			# starts the scan 
			# usage: scanner start
			elif args[0] == "start":
				self.SC.ping()
		else:
			print "Usage: scanner add [ip] [port]"


	#show [smt] commands
	def do_show(self, arguments):
		"""show [smt] to look up """

		args = arguments.split()
		if len(args) >= 1:
			
			#show scanlist
			if (args[0] == "scanlist"):
				print "DATABASE scanlist:"
				scanIpList = self.SC.get_scan_ip()
				for row in scanIpList:
					print "ID: ",row[0]," | ip-address: ", row[1], " | port: ",row[2], " | Date: ", row[3]  
			
			#show Help
			elif (args[0] == "?"):
				print "Possible actions:"
				print "scanlist: show all ips/ports to scan"
			
			#show nothing
			else: 
				print "Nothing to show for %s" % args[0]    
		#no arguments
		else:
			print "Nothing to show"

	def do_EOF(self, line):
		"""EOF Exit cmd"""
		return True
